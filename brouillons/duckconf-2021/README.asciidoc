= Compte rendu de la DuckConf 2021
Julien Kirch
v0.1, 2021-03-09
:article_lang: fr

Par rapport √† link:/duckconf-2020/[l'an dernier] j'ai √©t√© agr√©ablement surpris{nbsp}: des speakeuses et des talks √† la finition plus aboutie qui m'ont fait bien meilleure impression.

Le fait d'assister √† une conf√©rence en visio et avec des pr√©sentations pr√©-enregistr√©es est un peu bizarre, on y gagne en confort mais la perte de spontan√©it√© coupe un peu le lien.

Mon regret num√©ro un a √©t√© les talks et les slides uniquement au masculin, l'inconv√©nient de travailler dans une link:https://www.enercoop.fr[structure o√π le language inclusif est la norme] est qu'on s'y habitue.

== Jour 1{nbsp}: Architectures & architectes

=== Le r√¥le de l'architect(ur)e dans un contexte agile / Thomas Brien

link:https://www.youtube.com/watch?v=_S7ySqrBQz4[Lien vers la vid√©o]

Ce talk pr√©sente deux exemple de fonctionnement de l'architecture dans des contextes d'agile √† l'√©chelle : un fonctionnement avec le mod√®le team topologies, et un fonctionnement avec le mod√®le SAFe 5.

Dans les deux cas les architectes sont plac√©s dans une √©quipe transverse, avec le p√©rim√®tre qui correspond √† celui d'une cellule d'architecture classique (donner de la coh√©rence, faire des cadrages, porter de l'expertise‚Ä¶).

Les pratiques se rapprochent de celles qui √©vitent le pattern de la tour d'ivoire, par exemple de rester au plus proche des projets ou d'essayer de ne pas √™tre dans une posture trop confrontante.

J'ai rep√©r√© deux √©l√©ments sp√©cifiques √† l'agile{nbsp}:

- Le fait que les d√©cisions d'architecture doivent s'inscrire dans les it√©rations des √©quipes m√©tier.
- La capacit√© √† avoir des retours rapidement sur les propositions d'architecture, ce qui permet d'affiner les choses graduellement, mais attention √† ne pas changer de cap trop souvent car les projets ont une capacit√© √† s'adapter de mani√®re limit√©e.

=== Passons au niveau sup√©rieur dans la qualit√© des donn√©es r√©f√©rentielles / Ekaterina Simonenko & Selima Masmoudi

link:https://www.youtube.com/watch?v=SzHeIIG0p4c[Lien vers la vid√©o]

Il s'agit d'une pr√©sentation des fonctions de Master Data Management, c'est-√†-dire de gestion des donn√©es de r√©f√©rence dans un SI, et des outils qui existent sur ce cr√©neau.

Ces outils sont des composants sp√©cifiques en charge de g√©rer la qualit√© des donn√©es, et qui servent de point d'acc√®s aux donn√©es.

J'ai trouv√© int√©ressant l'injonction √† s'appuyer sur les cibles (par exemple sur la qualit√©) et les besoins m√©tier pour travailler les donn√©es plut√¥t que d'essayer par exemple de viser une qualit√© parfaite.

Quand j'ai travaill√© √† Octo, les produits de MDMs "`sur l'√©tag√®re`" √©taient s√©v√®rement jug√©s par rapport √† des d√©veloppement custom car ils √©tait consid√©r√©s comme lourds √† g√©rer et pas √† la hauteur de leurs promesses.
J'aurais bien aim√© savoir sur quoi s'appuie ce changement de discours.

L'autre question que je me pose c'est le positionnement de ces solutions vis-√†-vis de l'approche microservices qui pousse √† ce que chaque application soit ma√Ætre de ses donn√©es.

Ma vision est que les MDM peuvent avoir les m√™mes probl√®mes que les "`puit de donn√©es`" dont link:https://blog.octo.com/superbe-maison-darchitecte-avec-vue-sur-le-lac-compte-rendu-du-talk-de-thomas-vial-a-la-duck-conf-2018/[Thomas Vial avait parl√© dans le cas du DataLake], donc je serais int√©ress√© de savoir pourquoi √ßa n'est pas le cas.

Au final j'ai trouv√© la partie sur les besoins int√©ressante mais je n'ai pas √©t√© convaincu par le fait d'utiliser une solution.

=== Qui ma√Ætrise mieux le chaos de votre SI{nbsp}: Mozart ou B√©jart ? / Safa Mabrouk

link:https://www.youtube.com/watch?v=0zgDpZ0JOr0[Lien vers la vid√©o]

Ce talk commence par un historique des patterns d'int√©grations dans les SI{nbsp}: partant d'une brique unique, on a souvent commenc√© par d√©couper le syst√®me en plusieurs √©l√©ments qu'on va vouloir "`orchestrer`" (c'est-√†-dire en utilisant une application unique pour organiser les √©changes entre toutes les autres) pour ensuite basculer vers de la "`chor√©graphie`" (o√π les applications se coordonnent entre elles).

L'orchestration a atteint ses limites dans les grand syst√®mes car l'application cheffe d'orchestre a tendance √† concentrer beaucoup de logique, ce qui ne monte pas √† l'√©chelle.

√Ä l'inverse, le mod√®le d√©centralis√© de chor√©graphie peut √™tre compliqu√© √† g√©rer, par exemple pour la gestion de versions.

C'est d'autant plus compliqu√© que les API expos√©es sont unitaires et techniques (de type ressource par exemple), car alors les consommateurs ont besoin d'impl√©menter plus de m√©tier de leur c√¥t√©, ce qui augmente le couplage.

M√™me avec du monitoring de bout en bout de bonne qualit√© on ne s'en sort pas.

L'approche qui se d√©gage est d'avoir un mod√®le de chor√©graphie mais avec des application qui exposent des fonctionnalit√©s plus riches.
La synchronization s'en trouve alors simplifi√©e et le couplage diminu√©.

=== DevOps & Dataviz, un amour impossible{nbsp}? / J√©r√¥me Lambert & Mohamed Nidhal Safta

link:https://www.youtube.com/watch?v=RcnvtlWo-Ns[Lien vers la vid√©o]

L'id√©e de ce talk est de pr√©senter comment mettre en place trois pratiques "`DevOps`" dans un projet de Dataviz{nbsp}: la gestion de version, les tests automatis√©s, et l'automatisation des d√©ploiement.

La difficult√© est que sur le projet en question, la Dataviz est r√©alis√©e par un outil tout int√©gr√©e en SAAS et qui ne fournit pas ces fonctionnalit√©s de mani√®re native.
La solution est d'utiliser des outils p√©riph√©riques, et s'appuyer sur l'API de l'outil de Dataviz pour les piloter.

Le r√©sultat n'est pas parfait (par exemple ce sont des fichier binaires qui sont versionn√©s), mais semble acceptable.

Il m'a rappel√© ce qu'on faisait il y a quelques ann√©es avant link:https://blog.octo.com/middlewares-et-autres-outils-ce-quil-faut-verifier-avant-dacheter/[quand il s'agissait de faire la m√™me chose avec des outils d'int√©gration comme les ESB].

En passant, j'ai √©t√© amus√© d'entendre que les tests automatis√©s et la gestion de version sont une invention du DevOps, le temps passe et link:https://blog.octo.com/larrivee-de-lagile-a-octo-introduction/[l'histoire s'oublie].

=== Je suis architecte et je me soigne / Bor√©mi Toch & Laurent Sollier

link:https://www.youtube.com/watch?v=G1jpSsogYyU[Lien vers la vid√©o]

Ce talk parle de la place de l'architecte dans les organisations modernes, alors qu'elles sont tr√®s centr√©es sur les √©quipes projets et laissent donc moins de place aux r√¥les transverses comme ceux des architectes.

(Autopromo{nbsp}: link:https://blog.octo.com/avec-le-cloud-et-lagile-il-ny-a-plus-besoin-darchitectes/[j'avais d√©j√† un peu parl√© de ce sujet ici]).

Il font donc trouver qu'est ce que les architecte peuvent apporter dans ce type de structure, et quelles sont les postures √† adopter pour y parvenir :

- l'architecte vigie qui fait de la veille et identifie les risques
- l'architecte ambassadeur¬∑rice qui traite les questions de fronti√®res entre syst√®mes informatique et √©quipes, et qui sait vulgariser
- l'architecte coach¬∑e du SI qui travaille √† ce qu'il √©volue dans le bon sens

Le portrait m'a paru assez parlant, m√™me si je suis un peu plus optimiste que les speakers sur la capicit√© d'un¬∑e un architecte √† pousser des solutions, m√™me quand les √©quipes n'en veulent pas forc√©ment (du moins s'il¬∑elle a l'appui de sa hi√©rarchie).

=== Table ronde{nbsp}: l'architecte SI au temps de l'hypersp√©cialisation

Je n'ai pas beaucoup pris de note sur cette table ronde (et j'ai contribu√© √† faire d√©railler l'√©change en posant une question sur le cloud üò¨).

L'id√©e qui se d√©gageait est que les architectes doivent accepter de ne plus √™tre sp√©cialistes de tout, et se concentrer sur le fait d'√™tre des g√©n√©ralises et d'√™tre capable de faire le lien entre toutes les personnes.

== Jour 2{nbsp}: Architecture & cloud

Note{nbsp}: contrairement au titre, les pr√©sentations du jour n'avaient pas toutes un rapport √©vident avec le cloud.

=== Une √©quipe plateforme qui d√©livre{nbsp}! / Fran√ßois-Xavier Vende

link:https://i.ytimg.com/an_webp/CwclZThS3wc/mqdefault_6s.webp?du=3000&sqp=CMOzvIIG&rs=AOn4CLAbTIB6DKlOCwBJ-Nhd9TZKjYrR0g[Lien vers la vid√©o]

Cette pr√©sentation d√©crit la construction d'un syst√®me d'information en partant de rien, l'infrastructure ayant √©t√© construite en m√™me temps que les projets.

La plateforme est prise en charge par une √©quipe d√©di√©e sp√©cialis√©e, avec des relais identifi√©s dans les diff√©rentes √©quipes projets.

Par rapport aux √©changes de la veille sur la n√©cessit√© pour les architectes SI de se r√©inventer et √† ne plus jouer les d√©miurges entre eux, j'ai parfois l'impression que les Ops des √©quipes plateforme ont repris une partie de leurs anciennes attributions.

J'ai trouv√© int√©ressant l'accent mis sur le temps que prends l'industrialisation, dans une organisation o√π la plateforme technique avance en m√™me temps que les projets, cela signifie parfois accepter de faire du manuel et de la dette technique Ops pour ne pas bloquer les projets.

=== Pour √™tre "`data-centric`", faut-il centraliser{nbsp}? / Julien Ass√©mat & Renaud Andrieux

link:https://www.youtube.com/watch?v=2EFTeX9jVPo[Lien vers la vid√©o]

Cette pr√©sentation couvre les tr√®s grandes organisations avec de multiples entit√©s o√π une plateforme de donn√©e unique ne suffit plus{nbsp}: trop de types de donn√©es, qui n'ont pas toujours vocation √† √™tre partag√©es par tout le monde, trop de besoins diff√©rents, trop de plans projets et de budgets √† synchroniser.

La solution ressemble √† celle appliqu√©e c√¥t√© SI classique{nbsp}: avoir une √©quipe transverse qui d√©finit des cadres, et qui se concentre sur les questions d'interop√©rabilit√©.

Dans les tr√®s grosses organisations il y a des difficult√©s

M√™me approche que pour l'architecture vis √† vis de projet, o√π une √©quipe transverse construit une plateforme et un cadre pour des √©quipes projets qui sont dans les diff√©rentes entit√©s.

Le d√©tail est tr√®s largement inspir√© de deux longs articles de Zhamak Dehghani publi√©s sur le blog de Martin Fowler{nbsp}: link:https://martinfowler.com/articles/data-monolith-to-mesh.html[How to Move Beyond a Monolithic Data Lake to a Distributed Data Mesh] et link:https://martinfowler.com/articles/data-mesh-principles.html[Data Mesh Principles and Logical Architecture].

=== Architecture √©mergente dans l'intelligence artificielle / Emmanuel-Lin Toulemonde

link:https://www.youtube.com/watch?v=qj3lVoaAe3Q[Lien vers la vid√©o]

Apr√®s la pr√©sentation d'hier sur "`on peut faire de l'agile avec de la DataViz`", voici un exemple de "`on peut faire de l'agile avec de l'IA`"{nbsp}: apr√®s s'√™tre lanc√© au d√©part dans un plan d'architecture √† l'ancienne n√©cessitant d'avoir une plateforme compl√®te d√®s le d√©part, l'√©quipe a opt√© pour une approche it√©rative et √† pu ainsi d√©livrer rapidement de la valeur apr√®s une lutte qui a sembl√© acharn√© avec l'√©quipe d'architecture centrale.

20 ans apr√®s le manifeste agile et m√™me si √ßa fait toujours plaisir, l'impression de d√©j√† vu devant ce type de talk commence √† devenir lassant.

=== Tour d'horizon des algorithmes de consensus en 2021 / Ameyric Benthencourt & Franck Hillard

link:https://www.youtube.com/watch?v=JvCBkev1CNQ[Lien vers la vid√©o]

Il s'agit d'algorithmes de consensus sur la blockchain.
M√™me si j'aime bien les sujets d'architecture distribu√©, mon manque d'int√©r√™t pour la blockchain fait que je n'ai rien suivi.

=== CQRS √† notre secours / Florent Jaby

link:https://www.youtube.com/watch?v=RHUsQui8moc[Lien vers la vid√©o]

Cette pr√©sentation d√©crit la mise en place d'une architecture link:https://www.martinfowler.com/bliki/CQRS.html[CQRS].

J'ai particuli√®rement appr√©ci√© deux choses :

- l'approche l√©g√®re, sans le bus Kafka et le reste de l'outillage qui sont souvent pr√©sent√© comme l'architecture-type CQRS
- le CQRS ajout√© pendant la vie de l'application et pas d√®s le d√©but, ce qui permet d'avoir plus d'informations pour faire son choix.

=== Table ronde{nbsp}: les co√ªts dans le Cloud

Les offres clouds des gros fournisseurs (Amazon, Microsoft et Google) sont devenues extr√™mement fournies.

M√™me si on peut payer √† la demande, il est tout de m√™me souhaitable de pouvoir anticiper le budget dont on va avoir besoin, et d'essayer de ma√Ætriser ses d√©penses.

J'ai l'impression que cette ce sujet et donc l'expertise dans ce domaine se retrouve souvent dans le p√©rim√®tre de l'√©quipe plateforme, toujours dans l'id√©e que cette √©quipe a un air de famille avec les architectes √† l'ancienne.

La capacit√© √† pouvoir mesurer le co√ªt d'h√©bergement application par application, et √† pouvoir donc faire prendre des d√©cisions au plus juste (est ce qu'une application co√ªte plus qu'elle ne rapporte{nbsp}?) est int√©ressant, m√™me si je me m√©fie un peu des effets pervers que peut entra√Æner la capacit√© √† faire des arbitrages trop fin dans ce domaine.

== Jour 3{nbsp}: Architecture & changement

=== REX Bilan Carbone d'une ESN / Alexis Nicolas

link:https://www.youtube.com/watch?v=JMUCotczHR0[Lien vers la vid√©o]

Alexis Nicolas d√©crit la mani√®re dont Octo a fait son bilan carbone et les questions qui se posent pour arriver √† r√©duire l'empreinte carbone de l'entreprise.

Ce qui m'a un peu d√©mang√© c'est qu'un des leviers est l'objectif de croissance important (20% par an) demand√© √† l'entreprise qui devrait permettre d'amortir certains des co√ªts.

D'un c√¥t√© le calcul fonctionne.

Mais d'un autre c√¥t√© une croissance importante et continue comme fin en soi est une des raisons de la surconsommation de ressources.
Par cons√©quent j'ai peur que l'utiliser comme solution ne corresponde au fait de vouloir traiter un des sympt√¥mes d'un probl√®me en renfor√ßant sa cause.

Et bien entendu si le sujet du d√©veloppement durable et soutenable vous int√©resse, link:https://enercoop.fr[on recrute]{nbsp}!

=== √ätre rattrap√© par la dette technique, est-ce une fatalit√©{nbsp}? / Mickael Wegerich

link:https://www.youtube.com/watch?v=C2COBA4EFrM[Lien vers la vid√©o]

Ce talk pr√©sente une vision de la dette technique, des raisons qui font qu'elle appara√Æt et des solutions pour en sortir.

M√™me s'il contient des id√©es int√©ressantes, j'ai √©t√© g√™n√© par trois choses{nbsp}:

. L'id√©e que la dette technique est une cons√©quence de choix fait consciemment en connaissance de cause, alors que dans mon exp√©rience elle est le plus souvent involontaire (mais c'est peut-√™tre le signe que je ne suis pas assez bon ü§î).
. L'id√©e qu'il est normal de faire r√©guli√®rement des raccourcis en fin d'it√©ration pour tenir l'engagement pris sur le p√©rim√®tre de l'it√©ration. C'est une pratique dont on sait qu'elle pose probl√®me depuis longtemps, par exemple cela fait link:https://www.scrum.org/resources/commitment-vs-forecast[10 ans] que Scrum a remplac√© l'usage du mot "`engagement`"" par  "`pr√©vision`" pour parler du p√©rim√®tre d'it√©ration. Je comprends qu'il peut √™tre souhaitable de faire au mieux sur des projets qui ne se passent pas dans de bonnes conditions, mais c'est diff√©rent de faire comme s'il s'agissait de circonstances normales.
. Le dernier est que certains des probl√®mes (ou du moins la mani√®re dont ils sont pr√©sent√©s) et des solutions correspondent au discours de link:https://fr.wikipedia.org/wiki/Architecture_hexagonale_(logiciel)[l'architecture hexagonale]. Je ne suis pas convaincu par cette approche, et notamment des couches d'indirections qu'elle pousse √† ajouter dans les applications. Les personnes ayant fait du J2EE verront tr√®s bien √† quoi peut mener l'id√©e de vouloir s√©parer les choses par principe.

=== Les Fake News du Low-Code / Sylvain Fagnent & Alain Faur√©

link:https://www.youtube.com/watch?v=sQZqyB-EZro[Lien vers la vid√©o]

Le talk vise √† d√©mystifier les plateforme low-code.
Les auteurs pr√©cisent bien qu'il ne faut pas confondre les outils low-code et les outils no-code.

Les outils no-code visent des personnes n'ayant aucune comp√©tence informatique, et sont plut√¥t limit√©s √† des applications tr√®s simples.
√Ä l'inverse les outils low-code n√©cessitent une certaine connaissance en programmation, et leur objectif est de permettre d'acc√©l√©rer le d√©veloppement en fournissant des outils complets int√©grant de nombreuses fonctionnalit√©s (monitoring, s√©curit√©‚Ä¶) ce qui permet d'acc√©l√©rer le travail.

Depuis le temps qu'on en parle, ces plateformes ont bien progress√© et il est d√©sormais possible d'y faire du d√©veloppement en mettant en ≈ìuvre un certain nombre de bonnes pratiques (tests unitaires, r√©utilisation de code, gestion de source‚Ä¶), l'enjeu √©tant d√©sormais plus que les personnes utilisatrices ne sont pas forc√©ment sensibilis√©es √† ces aspects.

Par contre ces plateformes sont adapt√©es √† certains usages et ne vont donc pas remplacer l'ensemble des d√©veloppements, par exemple des applications mobiles ou des sites intranet avec une complexit√© limit√©e.
Lors du cadrage d'un projet il faut donc √™tre vigilant √† bien v√©rifier s'il est compatible avec le domaine de pertinence de l'outil.

Un point noir pour moi sur le talk{nbsp}:les opposants au low code sont repr√©sent√©s par des caricatures de Donald Trump, et cela m'a mis physiquement mal √† l'aise.
Je pense qu'on peut critiquer des technologies, m√™me en √©tant de mauvaise foi, sans √™tre assimil√© √† une personne raciste et misogyne qui menace de mort ses opposant¬∑e¬∑s.

=== R√©ussir une "Conway Invers√©e" / Romain Vailleux

link:https://www.youtube.com/watch?v=zmJknCVQ3Tc[Lien vers la vid√©o]

L'id√©e du talk est que si les organisations ont tendance √† produire des produits qui sont le reflets de leur structure de communication, il est devient n√©cessaire d'organiser l'entreprise en fonction des produit qu'elle veut construire.

L'id√©e √©tant notamment de gagner en efficacit√© en limitant le nombre de sujets sur lesquels une personne doit travailler, et de rassembler dans des √©quipes les personnes qui sont n√©cessaires √† un projet.

L'approche propos√©e est celle du livre link:https://teamtopologies.com[team topologies], donc le vocabulaire et les mod√®les ont d√©j√† beaucoup irrigu√© le reste de la conf√©rence.

=== CovidTracker{nbsp}: la data au service de tous{nbsp}! / Guillaume Rozier

link:https://www.youtube.com/watch?v=K7DuqLOGy4c[Lien vers la vid√©o]

Guillaume Rozier, cr√©ateur du sitelink:https://covidtracker.fr[CovidTracker] d√©crit comment le site s'est construit petit √† petit, en fonction des besoins et des pics de charges successifs.

C'est un bon cas d'usage de l'approche agile et lean start up qui montre qu'on peut faire un site tr√®s visit√© sans plateforme DevOps ni Digital Factory, m√™me si les messages forts sont r√©p√©t√©s jusqu'√† devenir un peu aga√ßants.

=== Table ronde{nbsp}: tour d'horizon des impacts architecturaux de la COVID

√áa partait un peu dans tous les sens, entre probl√®mes de mont√©e en charge de VPN, migration pr√©cipit√©es sur le Cloud et difficult√© √† organiser des ateliers en remote, je n'en suis pas ressorti avec grand chose.