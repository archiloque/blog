= Software development microfictions
Julien Kirch
v0.1, 2023-01-15
:article_lang: en

In older projects, senior projects managers had features sacs where features requests grown.

When a feature request was ready, it was expelled through the PM's extensible mouth and let to dry for a few days before being shown to the development team.

'''

The best way to deal with people complaining about features being removed in a software update is to include a brain-cleansing module in your code: when the module is loaded into a user's browser, any memory of the deleted feature is removed from the user' brains.

'''

When a line of code is written, it captures some of the writer's psychic energy.

When a line of code is deleted, this energy is discharged.
This discharge will affect all people near the peripheral used for editing.

Deleting a lot of code at once can be dangerous.

Using a remote desktop or other technical isolation can reduce the impact, depending of the protocol, but the recommended method is to have a cat sit near the machine during the refactoring since they can harmlessly feed on this energy.

'''

Using automated tools to remove some types of bugs mean the ecological pressure is lower on nastier bugs because competition for food is less harsh.

These harder to fix bugs will probably grow steadily, making software development more difficult.

'''

Before Conway's law was voted by IT high council, you could decide to create a software in the design you wanted with no relation to an organization's structure. Unfortunately, it meant too many successful projects and not enough money for consulting companies.

It needed to be fixed.

'''

The natural world is full of chaos.
When we attempt to move reality into a computer systems, the chaos it contains creates lumps that we perceive as bugs. Fixing the bugs release the chaos.

As the total quantity of chaos is stable and more and more of the natural world is digitalized, the chaos density slowly increase.

Which means that digitalization will create software with more and more bugs, until we reach saturation

'''

Brain snapshots and their integration into tools solved the software documentation problem: 

* When someone create a ticket, a snapshot of the author's brain is taken and stored in the ticketing tool, any question can then be asked to them, even years after the problem is spotted, which replace the need to write specification
* When a development is done, a snapshot of the developer's brain is taken and stored in the version control system, even years after the code is written, which replace the need to write code documentation.

The latest technology update provide to ability to merge brains snapshots, which enable to consolidate several requirements or technical changes in one persona.
The current brain snapshotting tools only works when merging different snapshots from the same person, merging snapshots from several people and especially more than two is unsupported from now.

'''

Iteration as infinite loop