= Entraînement délibéré et développement
Julien Kirch
v0.1, 2020-10-13
:article_lang: fr
:article_image: image.jpeg

L'entraînement délibéré est une pratique issue du sport de haut niveau où l'entraînement se concentre sur les parties où l'athlète doit progresser à l'aide d'exercices bien identifiés.
Par exemple en basket, il peut s'agir de répéter un certain type de tir jusqu'à obtenir le niveau désiré.

link:https://andymatuschak.org/sight-reading/[Cet article] parle de l'absence d'entraînement délibéré dans les travailleur·e·s du savoir{nbsp}: certaines personnes s'entrainent avec des exercices mais plutôt de manière ponctuelle, par exemple pour maîtriser un nouveau domaine, alors que d'autres pensent que de pratiquer leur discipline est suffisant.

Cela m'a fait réfléchir aux pratiques que je connais dans le développement.

(Je vous préviens{nbsp}: je n'ai d'idée magistrale à vous proposer, plutôt des insatisfactions et des pistes.)

== Un équivalent à l'entraînement délibéré

Les exercice que j'ai l'impression de croiser le plus souvent dans le développement sont les katas qui sont des exercices courts.
link:../kata-mais-pas-trop[J'ai déjà décris mes frustrations avec cet outil]. Dans ce que j'ai décris plus haut les katas permettent une introduction à une pratique, mais je ne pense pas qu'ils permettent de progresser très loin (en tous cas ceux que je connais).

En développement, je ne sais même pas un si un équivalent direct de l'entraînement délibéré est possible.
L'idée de l'entraînement délibéré est de progresser en répétant un même geste, alors que dans le développement où l'activité principale est la conception, il est difficile pour une même personne de concevoir deux fois la même chose, car la deuxième fois va probablement beaucoup s'appuyer sur la première car la personne saura déjà comment s'y prendre.

Je ne pense pas que la répétition sera probablement inutile, elle pourrait ainsi permettre d'explorer d'autres approches, mais toute une partie du travail ne sera pas à refaire.
Et au delà d'une ou deux répétition, je pense qu'il est probable que l'exercice ne permette plus d'apprendre grand chose.

== Au moins un entraînement plus réfléchi{nbsp}?

En dehors des katas, une manière répandue mais j'ai l'impression souvent peu structurée est de faire des mini-projet, par exemple en réimplémentant des version simplifiées outils qu'on a l'habitude d'utiliser (comme link:../ecrire-un-orm-en-ruby-1[un ORM] ou link:../task-engine-ruby[un moteur de tâches]).

Les exercices en questions sont assez long (plusieurs heures au minimum), donc on n'est plus du tout dans le même cadre.
À l'inverse, la durée permet de pratiquer de manière plus longue qu'un kata un sujet en particulier si le projet s'y prête.

On a complètement perdu la partie répétition, mais on a une manière de creuser un sujet.

Mais à l'inverse du sport où les exercices sont répertoriés, ce qui serait peut-être utile serait de savoir à l'avance quelle compétence chaque type de projet permet de faire progresser.

Une certaine expérience du domaine du projet permet de se faire une idée, par exemple qu'un moteur d'expression régulière devrait permettre de s'exercer au parsing.
Cela peut permettre des trouver des idées, mais peut-être pas forcément les mieux adaptées.

L'autre élément difficile à savoir est quelles sont les parties du projet qui fournissent le meilleur apprentissage pour un temps et un sujet donné.

Par exemple certains projets permettent d'apprendre plein de choses dans leur phase initiale, et le reste est juste du code, alors que pour d'autre les phases les plus intéressantes se passent plus tard lors de l'implémentation de fonctionnalités plus avancées.
Avoir cette information au début permet d'éviter le risque de s'arrêter trop tôt ou trop tard.

Ma suggestion, pour les personnes qui développent des minis-projets et qui veulent en parler, serait donc de documenter ces éléments (durée du projet, domaines couverts, moments où on apprend le plus de choses) pour que d'autres puissent en profiter.

À moins que vous n'ayez une meilleure idée.