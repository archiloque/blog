= Sorting legos and software design
Julien Kirch
v0.1, 2024-03-18
:article_lang: en
:article_description: One box, two boxes, three boxes, lots of boxes

== Sorting legos, down the rabbit hole

Sorting legos can be an interesting activity when you enjoy overthinking.

image::lego.png[A table with some legos in different boxes, and a few parts not in boxes]

When I dismantle a large model, I put the parts in boxes to make them easier to find back later.
It means deciding how to sort the parts into different boxes.

The usual situation is the one depicted on the above picture: there are a few self-evident groups, and some other parts that don't fit in these groups.
Some parts could be put in the groups if I somewhat relax the criteria I established in my head, and others don't match at all.

In the picture, I created groups for the colors with the most parts.
I can put the pink parts in the red parts box, if I decide that pink is redish enough that I'll remember to look for them there, or I can decide that pink is its own color and deserve better than to be mixed with the reds.

But then what should I do with the remaining parts, including or not the pink ones?

I could create an "`other`" box.
I could also get a box for each color if I want to apply my "`one box per color`" rule without an exception.

Considering some of the groups have often much more parts than other, I can decide to split them, if I want to have approximately the same number of parts in each group, to avoid spending more times looking for a part in a larger group.

On the other hand, a straightforward method would be to create a category for each part type and color.
This way there is no judgement call to be made: the sorting criteria is objective, and this approach has a kind of pureness.

Except I would have a lot and lots of boxes, which would highly impractical.

== Here comes the software design
