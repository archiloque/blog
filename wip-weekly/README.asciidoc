= Links - Soon
Julien Kirch
v1.0, 2021-01-01
:article_lang: en
:figure-caption!:
:article_description: 

== link:https://www.geepawhill.org/2021/11/02/random-coaching-tips/[Random coaching tips]

[quote]
____
Going from zero to agreement using a meeting fails way more often than succeeds. You can build ground for consensus in hallways, small groups, backchannel chats, and informal conversation, far more effectively than in a 10-person meeting. Use meetings to formalize and confirm.
____

== link:https://www.poor.dev/blog/terminal-anatomy/[Anatomy of a terminal emulator]

[quote]
____
The terminal is a ubiquitous platform that has been fairly stable for many years. There are plenty of resources out there for understanding its inner workings, but most of them are either fairly arcane or offer deep knowledge about a very specific area. This post aims to bridge this gap by offering a gentle and broad introduction to the terminal emulator as a platform for development.

We’ll talk about the different parts of the terminal and how they interact, build a small program to read input from the shell and understand how it’s interpreted, discuss how to create a user interface in the terminal and finally see how we can use all of this to cause some mischief.
____

== link:https://danluu.com/culture/[Culturally transmitted skills and values]

[quote]
____
That's the opposite of what I've seen at two of the three big tech companies I've worked for, where the median person avoids touching problems outside of their team's mandate like the plague, and someone who isn't politically savvy who brings up a problem to another team will get a default answer of "sorry, this isn't on our roadmap for the quarter, perhaps we can put this on the roadmap in [two quarters from now]", with the same response repeated to anyone naive enough to bring up the same issue two quarters later. At every tech company I've worked for, huge, extremely costly, problems slip through the cracks all the time because no one wants to pick them up. I never observed that happening at Centaur.

A side effect of big company tech culture is that someone who wants to actually do the right thing can easily do very high (positive) impact work by just going around and fixing problems that any intern could solve, if they're willing to ignore organizational processes and incentives.
____

== link:https://martinfowler.com/bliki/DefaultTrialRetire.html[DefaultTrialRetire]

[quote]
____
Within each normal-sized team, limit the choice of alternatives for any class of technology to three. These are: the current sensible default, the one we're experimenting with as a trial, and the one that we hate and want to retire.
____

== link:https://martinfowler.com/articles/strong-weak-arch.html[The strong and weak forces of architecture]

[quote]
____
[Attributes]
|===
|Domain (strong force)|Vertical (weakened force)|Whole of org (weak force)

|Systems that are owned within a single domain are relatively easy to change in a closely co-ordinated way. For example this means (slightly) less effort needs to be burned on maintaining backwards-compatibility of interfaces.

Even "`forbidden`" approaches like database-level integration will have less impact within the systems in a single domain. Although we shouldn’t build a system that way deliberately, if it exists then we can contain the impact within a single domain.

|Changes that must be co-ordinated across multiple domains within a vertical should be rare, but can be managed when absolutely necessary. link:https://www.thoughtworks.com/radar/techniques/api-expand-contract[Expand-contract changes to API contracts] is quite effective where the impacts are contained within the vertical.

|APIs and interfaces (e.g. events) that are published to the whole of MYOB must have the highest attention to published schemas, versioning, backwards compatibility, contracts, and deprecation strategy.

The impact of highly-coupled integration (e.g. ETLs, database integration) is very high, and should be absolutely avoided.
|===
____
